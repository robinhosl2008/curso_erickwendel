function cov_2nsskgtiqu(){var path="/home/seele/projetos/robson/nodejs/curso_erickwendel/10-multi-db-refactory-mongodb/src/test/postgresStrategy.test.js";var hash="abbf2255baeaec3e4d11549af3a7db5f9ab3d9ad";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/seele/projetos/robson/nodejs/curso_erickwendel/10-multi-db-refactory-mongodb/src/test/postgresStrategy.test.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:17},end:{line:2,column:51}},"2":{start:{line:3,column:16},end:{line:3,column:55}},"3":{start:{line:4,column:19},end:{line:4,column:62}},"4":{start:{line:5,column:15},end:{line:5,column:60}},"5":{start:{line:7,column:16},end:{line:7,column:61}},"6":{start:{line:8,column:19},end:{line:11,column:1}},"7":{start:{line:13,column:0},end:{line:59,column:2}},"8":{start:{line:14,column:4},end:{line:17,column:6}},"9":{start:{line:15,column:23},end:{line:15,column:50}},"10":{start:{line:16,column:8},end:{line:16,column:77}},"11":{start:{line:19,column:4},end:{line:23,column:6}},"12":{start:{line:20,column:26},end:{line:20,column:58}},"13":{start:{line:21,column:8},end:{line:21,column:28}},"14":{start:{line:22,column:8},end:{line:22,column:96}},"15":{start:{line:25,column:4},end:{line:28,column:6}},"16":{start:{line:26,column:26},end:{line:26,column:46}},"17":{start:{line:27,column:8},end:{line:27,column:50}},"18":{start:{line:30,column:4},end:{line:34,column:6}},"19":{start:{line:31,column:28},end:{line:31,column:73}},"20":{start:{line:32,column:8},end:{line:32,column:28}},"21":{start:{line:33,column:8},end:{line:33,column:92}},"22":{start:{line:36,column:4},end:{line:52,column:6}},"23":{start:{line:38,column:22},end:{line:38,column:67}},"24":{start:{line:39,column:28},end:{line:42,column:9}},"25":{start:{line:45,column:28},end:{line:45,column:71}},"26":{start:{line:47,column:8},end:{line:47,column:35}},"27":{start:{line:49,column:31},end:{line:49,column:77}},"28":{start:{line:51,column:8},end:{line:51,column:70}},"29":{start:{line:54,column:4},end:{line:58,column:6}},"30":{start:{line:55,column:32},end:{line:55,column:77}},"31":{start:{line:56,column:26},end:{line:56,column:64}},"32":{start:{line:57,column:8},end:{line:57,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:30},end:{line:13,column:31}},loc:{start:{line:13,column:36},end:{line:59,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:32},end:{line:14,column:33}},loc:{start:{line:14,column:44},end:{line:17,column:5}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:29},end:{line:19,column:30}},loc:{start:{line:19,column:41},end:{line:23,column:5}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:33},end:{line:25,column:34}},loc:{start:{line:25,column:44},end:{line:28,column:5}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:51},end:{line:30,column:52}},loc:{start:{line:30,column:62},end:{line:34,column:5}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:36,column:44},end:{line:36,column:45}},loc:{start:{line:36,column:56},end:{line:52,column:5}},line:36},"6":{name:"(anonymous_6)",decl:{start:{line:54,column:34},end:{line:54,column:35}},loc:{start:{line:54,column:46},end:{line:58,column:5}},line:54}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"abbf2255baeaec3e4d11549af3a7db5f9ab3d9ad"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2nsskgtiqu=function(){return actualCoverage;};}return actualCoverage;}cov_2nsskgtiqu();const assert=(cov_2nsskgtiqu().s[0]++,require('assert'));const Postgres=(cov_2nsskgtiqu().s[1]++,require('../db/postgres/postgres'));const Context=(cov_2nsskgtiqu().s[2]++,require('./../db/base/contentStrategy'));const connection=(cov_2nsskgtiqu().s[3]++,require('../db/postgres/config/connection'));const schema=(cov_2nsskgtiqu().s[4]++,require('../db/postgres/schemas/heroiSchema'));const context=(cov_2nsskgtiqu().s[5]++,new Context(new Postgres(connection,schema)));const MOCK_HEROI=(cov_2nsskgtiqu().s[6]++,{nome:'Robson',poder:'Inteligência'});cov_2nsskgtiqu().s[7]++;describe('Postgres Strategy',()=>{cov_2nsskgtiqu().f[0]++;cov_2nsskgtiqu().s[8]++;it('PostgreSQL Connection',async()=>{cov_2nsskgtiqu().f[1]++;const result=(cov_2nsskgtiqu().s[9]++,await context.isConnected());cov_2nsskgtiqu().s[10]++;assert.deepStrictEqual(result,true,'Teste de conexão não passou!');});cov_2nsskgtiqu().s[11]++;it('Cadastrar um heroi',async()=>{cov_2nsskgtiqu().f[2]++;const resultado=(cov_2nsskgtiqu().s[12]++,await context.create(MOCK_HEROI));cov_2nsskgtiqu().s[13]++;delete resultado.id;cov_2nsskgtiqu().s[14]++;assert.deepStrictEqual(resultado,MOCK_HEROI,'Problema ao tentar cadastrar um heroi!');});cov_2nsskgtiqu().s[15]++;it('Listar todos os herois',async()=>{cov_2nsskgtiqu().f[3]++;const resultado=(cov_2nsskgtiqu().s[16]++,await context.read());cov_2nsskgtiqu().s[17]++;assert.ok(resultado.length>0,true,'');});cov_2nsskgtiqu().s[18]++;it('Buscar o heroi cadastrado chamado Robson',async()=>{cov_2nsskgtiqu().f[4]++;const[resultado]=(cov_2nsskgtiqu().s[19]++,await context.read({nome:MOCK_HEROI.nome}));cov_2nsskgtiqu().s[20]++;delete resultado.id;cov_2nsskgtiqu().s[21]++;assert.deepStrictEqual(resultado,MOCK_HEROI,'O heroi Robson não foi encontrado.');});cov_2nsskgtiqu().s[22]++;it('Atualizar o poder do heroi Robson',async()=>{cov_2nsskgtiqu().f[5]++;// Criando o objeto a ser modificado.
var[heroi]=(cov_2nsskgtiqu().s[23]++,await context.read({nome:MOCK_HEROI.nome}));const updateHeroi=(cov_2nsskgtiqu().s[24]++,{...MOCK_HEROI,poder:'Luva do Poder'});// Realiza a atualização no heroi.
const[resultado]=(cov_2nsskgtiqu().s[25]++,await context.update(heroi.id,updateHeroi));cov_2nsskgtiqu().s[26]++;assert.ok(resultado,true);const[updatedHeroi]=(cov_2nsskgtiqu().s[27]++,await context.read({nome:updateHeroi.nome}));cov_2nsskgtiqu().s[28]++;assert.deepStrictEqual(updatedHeroi.poder,updateHeroi.poder);});cov_2nsskgtiqu().s[29]++;it('Remover um heroi por id',async()=>{cov_2nsskgtiqu().f[6]++;const[heroiToRemove]=(cov_2nsskgtiqu().s[30]++,await context.read({nome:MOCK_HEROI.nome}));const resultado=(cov_2nsskgtiqu().s[31]++,await context.delete(heroiToRemove.id));cov_2nsskgtiqu().s[32]++;assert.ok(resultado,true);});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RncmVzU3RyYXRlZ3kudGVzdC5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiUG9zdGdyZXMiLCJDb250ZXh0IiwiY29ubmVjdGlvbiIsInNjaGVtYSIsImNvbnRleHQiLCJNT0NLX0hFUk9JIiwibm9tZSIsInBvZGVyIiwiZGVzY3JpYmUiLCJpdCIsInJlc3VsdCIsImlzQ29ubmVjdGVkIiwiZGVlcFN0cmljdEVxdWFsIiwicmVzdWx0YWRvIiwiY3JlYXRlIiwiaWQiLCJyZWFkIiwib2siLCJsZW5ndGgiLCJoZXJvaSIsInVwZGF0ZUhlcm9pIiwidXBkYXRlIiwidXBkYXRlZEhlcm9pIiwiaGVyb2lUb1JlbW92ZSIsImRlbGV0ZSJdLCJtYXBwaW5ncyI6Inl3SEFlWTsyRkFmWixLQUFNQSxDQUFBQSxNQUFNLDBCQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFWLENBQVosQ0FDQSxLQUFNQyxDQUFBQSxRQUFRLDBCQUFHRCxPQUFPLENBQUMseUJBQUQsQ0FBVixDQUFkLENBQ0EsS0FBTUUsQ0FBQUEsT0FBTywwQkFBR0YsT0FBTyxDQUFDLDhCQUFELENBQVYsQ0FBYixDQUNBLEtBQU1HLENBQUFBLFVBQVUsMEJBQUdILE9BQU8sQ0FBQyxrQ0FBRCxDQUFWLENBQWhCLENBQ0EsS0FBTUksQ0FBQUEsTUFBTSwwQkFBR0osT0FBTyxDQUFDLG9DQUFELENBQVYsQ0FBWixDQUVBLEtBQU1LLENBQUFBLE9BQU8sMEJBQUcsR0FBSUgsQ0FBQUEsT0FBSixDQUFZLEdBQUlELENBQUFBLFFBQUosQ0FBYUUsVUFBYixDQUF5QkMsTUFBekIsQ0FBWixDQUFILENBQWIsQ0FDQSxLQUFNRSxDQUFBQSxVQUFVLDBCQUFHLENBQ2ZDLElBQUksQ0FBRSxRQURTLENBRWZDLEtBQUssQ0FBRSxjQUZRLENBQUgsQ0FBaEIsQyx3QkFLQUMsUUFBUSxDQUFDLG1CQUFELENBQXNCLElBQU0saURBQ2hDQyxFQUFFLENBQUMsdUJBQUQsQ0FBMEIsU0FBWSx5QkFDcEMsS0FB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QyxDQUFGLENBS0gsQ0E5Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgUG9zdGdyZXMgPSByZXF1aXJlKCcuLi9kYi9wb3N0Z3Jlcy9wb3N0Z3JlcycpO1xuY29uc3QgQ29udGV4dCA9IHJlcXVpcmUoJy4vLi4vZGIvYmFzZS9jb250ZW50U3RyYXRlZ3knKTtcbmNvbnN0IGNvbm5lY3Rpb24gPSByZXF1aXJlKCcuLi9kYi9wb3N0Z3Jlcy9jb25maWcvY29ubmVjdGlvbicpO1xuY29uc3Qgc2NoZW1hID0gcmVxdWlyZSgnLi4vZGIvcG9zdGdyZXMvc2NoZW1hcy9oZXJvaVNjaGVtYScpO1xuXG5jb25zdCBjb250ZXh0ID0gbmV3IENvbnRleHQobmV3IFBvc3RncmVzKGNvbm5lY3Rpb24sIHNjaGVtYSkpO1xuY29uc3QgTU9DS19IRVJPSSA9IHtcbiAgICBub21lOiAnUm9ic29uJyxcbiAgICBwb2RlcjogJ0ludGVsaWfDqm5jaWEnXG59XG5cbmRlc2NyaWJlKCdQb3N0Z3JlcyBTdHJhdGVneScsICgpID0+IHtcbiAgICBpdCgnUG9zdGdyZVNRTCBDb25uZWN0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250ZXh0LmlzQ29ubmVjdGVkKCk7XG4gICAgICAgIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwocmVzdWx0LCB0cnVlLCAnVGVzdGUgZGUgY29uZXjDo28gbsOjbyBwYXNzb3UhJyk7XG4gICAgfSlcblxuICAgIGl0KCdDYWRhc3RyYXIgdW0gaGVyb2knLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdGFkbyA9IGF3YWl0IGNvbnRleHQuY3JlYXRlKE1PQ0tfSEVST0kpO1xuICAgICAgICBkZWxldGUgcmVzdWx0YWRvLmlkO1xuICAgICAgICBhc3NlcnQuZGVlcFN0cmljdEVxdWFsKHJlc3VsdGFkbywgTU9DS19IRVJPSSwgJ1Byb2JsZW1hIGFvIHRlbnRhciBjYWRhc3RyYXIgdW0gaGVyb2khJyk7XG4gICAgfSlcblxuICAgIGl0KCdMaXN0YXIgdG9kb3Mgb3MgaGVyb2lzJywgYXN5bmMgKCkgPT57IFxuICAgICAgICBjb25zdCByZXN1bHRhZG8gPSBhd2FpdCBjb250ZXh0LnJlYWQoKTtcbiAgICAgICAgYXNzZXJ0Lm9rKHJlc3VsdGFkby5sZW5ndGggPiAwLCB0cnVlLCAnJyk7XG4gICAgfSlcblxuICAgIGl0KCdCdXNjYXIgbyBoZXJvaSBjYWRhc3RyYWRvIGNoYW1hZG8gUm9ic29uJywgYXN5bmMgKCkgPT57IFxuICAgICAgICBjb25zdCBbcmVzdWx0YWRvXSA9IGF3YWl0IGNvbnRleHQucmVhZCh7IG5vbWU6IE1PQ0tfSEVST0kubm9tZSB9KTtcbiAgICAgICAgZGVsZXRlIHJlc3VsdGFkby5pZDtcbiAgICAgICAgYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChyZXN1bHRhZG8sIE1PQ0tfSEVST0ksICdPIGhlcm9pIFJvYnNvbiBuw6NvIGZvaSBlbmNvbnRyYWRvLicpO1xuICAgIH0pXG5cbiAgICBpdCgnQXR1YWxpemFyIG8gcG9kZXIgZG8gaGVyb2kgUm9ic29uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAvLyBDcmlhbmRvIG8gb2JqZXRvIGEgc2VyIG1vZGlmaWNhZG8uXG4gICAgICAgIHZhciBbaGVyb2ldID0gYXdhaXQgY29udGV4dC5yZWFkKHsgbm9tZTogTU9DS19IRVJPSS5ub21lIH0pO1xuICAgICAgICBjb25zdCB1cGRhdGVIZXJvaSA9IHtcbiAgICAgICAgICAgIC4uLk1PQ0tfSEVST0ksXG4gICAgICAgICAgICBwb2RlcjogJ0x1dmEgZG8gUG9kZXInXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvLyBSZWFsaXphIGEgYXR1YWxpemHDp8OjbyBubyBoZXJvaS5cbiAgICAgICAgY29uc3QgW3Jlc3VsdGFkb10gPSBhd2FpdCBjb250ZXh0LnVwZGF0ZShoZXJvaS5pZCwgdXBkYXRlSGVyb2kpO1xuXG4gICAgICAgIGFzc2VydC5vayhyZXN1bHRhZG8sIHRydWUpO1xuXG4gICAgICAgIGNvbnN0IFt1cGRhdGVkSGVyb2ldID0gYXdhaXQgY29udGV4dC5yZWFkKHsgbm9tZTogdXBkYXRlSGVyb2kubm9tZSB9KTtcblxuICAgICAgICBhc3NlcnQuZGVlcFN0cmljdEVxdWFsKHVwZGF0ZWRIZXJvaS5wb2RlciwgdXBkYXRlSGVyb2kucG9kZXIpO1xuICAgIH0pXG5cbiAgICBpdCgnUmVtb3ZlciB1bSBoZXJvaSBwb3IgaWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IFtoZXJvaVRvUmVtb3ZlXSA9IGF3YWl0IGNvbnRleHQucmVhZCh7IG5vbWU6IE1PQ0tfSEVST0kubm9tZSB9KTtcbiAgICAgICAgY29uc3QgcmVzdWx0YWRvID0gYXdhaXQgY29udGV4dC5kZWxldGUoaGVyb2lUb1JlbW92ZS5pZCk7XG4gICAgICAgIGFzc2VydC5vayhyZXN1bHRhZG8sIHRydWUpO1xuICAgIH0pXG59KVxuIl19